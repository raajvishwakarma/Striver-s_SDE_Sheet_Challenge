int modularExponentiation(int x, int n, int m) {
	int result = 1;
    while(n>0)
    {
        if(n&1)
        { // odd case   or base case when n is 1
            result = (1LL * (result) * (x)%m)%m;
        } 
        x = (1LL * (x)%m * (x)%m)%m;
        n = n>>1;    // divide by 2
    }
    return result;
}
